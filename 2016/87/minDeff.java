package 2016.87;

// מחלקה שמכילה את האלגוריתם שלנו
public class minDeff {
    
    // פונקציה ראשית שמתחילה את חישוב ההפרש המינימלי
    public static int minDeff(int[] arr) {
        return minDeff(arr, 0, 0, 0);  // קריאה לפונקציה רקורסיבית שמבצעת את החישוב
    }

    // פונקציה רקורסיבית שמחשבת את ההפרש המינימלי בין שתי קבוצות
    private static int minDeff(int[] arr, int i, int setA, int setB) {
        // תנאי סיום - כאשר עברנו על כל האלמנטים במערך
        if (i == arr.length) {
            return Math.abs(setA - setB);  // חישוב ההפרש המוחלט בין הסכומים של שתי הקבוצות
        } else {
            // חישוב ההפרש כאשר מוסיפים את האלמנט הנוכחי לקבוצה A
            int option1 = minDeff(arr, i + 1, setA + arr[i], setB);
            // חישוב ההפרש כאשר מוסיפים את האלמנט הנוכחי לקבוצה B
            int option2 = minDeff(arr, i + 1, setA, setB + arr[i]);
            // החזרת ההפרש המינימלי מבין שתי האופציות
            return Math.min(option1, option2);
        }
    }
// }

// כתוב שיטה סטטית רקורסיבית הממקבלת מערך של מספרים שלמים אי-שליליים arr.

// ומטרתה למצוא את המינימום האפשרי לקבל ערך-על-ידי חלוקת המערך לשתי קבוצות כך שההפרש בין סכומי הקבוצות יהיה מינימלי.

// המערך לא חייב להיות מחולק שווה בשווה בין הקבוצות, כלומר ניתן שקבוצה אחת תהיה ריקה.

