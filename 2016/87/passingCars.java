public static int passingCars(int[] a) { 
    int countEast = 0, passing = 0; 
    // משתנה countEast סופר את מספר המכוניות שמסמלות את הכיוון מזרח (0).
    // משתנה passing סופר את מספר הזוגות של מכוניות ממזרח וממערב שנפגשות.

    for (int i = 0; i < a.length; i++) { 
        // הלולאה עוברת על כל המכוניות במערך.

        if (a[i] == 1) { 
            // כאשר הערך הוא 1, זאת אומרת שמדובר במכונית ממערב.
            // נוסיף את מספר המכוניות ממזרח שהופיעו עד עכשיו (countEast) למשתנה passing.
            passing += countEast; 
        } else {
            // אחרת (אם הערך הוא 0), מדובר במכונית ממזרח.
            // נגדיל את המשתנה countEast כי מצאנו מכונית נוספת ממזרח.
            countEast++;
        }
    }

    return passing; 
    // הפונקציה מחזירה את מספר הזוגות שנפגשו (ממזרח וממערב).
}

// נתון מערך חד-ממדי המכיל מספרים 1 ו-0 בלבד.

// המערך מייצג תנועה של מכוניות בכביש באופן הבא:

// 0 מייצג מכונית שנוסעת למזרח (east) ו-1 מייצג מכונית שנוסעת למערב (west).

// נגדיר זוג מכוניות כ-"מצליבות" (עוברות זו על פני זו) כאשר מכונית אחת נוסעת מזרחה והשניה מערבה.

// בצורה מדויקת יותר - זוג מכוניות 
// 𝑃
// ,
// 𝑄
// P,Q מצליבות כאשר 
// 𝑃
// ≤
// 𝑄
// P≤Q ו- 
// 𝑃
// P נושאת מזרחה ו- 
// 𝑄
// Q נושאת מערבה.

// כתבו שיטה סטטית המקבלת מערך א' מלא בתנועים כנ"ל, ומחזירה את מספר הזוגות של מכוניות שמצליבות. (אנחנו מניחים ש- 
// 𝑃
// ≤
// 𝑄
// P≤Q הם אינדקסים במערך).