
public class search {
  
    public static boolean search(int[][] mat, int num) {
        // משתנים לאחסון האורך של המטריצה ומיקומי האינדקסים
        int n = mat.length, i = 0, j = 0;
        
        // לולאה שתפעל כל עוד n גדול מ-1
        while (n > 1) {
            // בדיקה האם המספר נמצא ברבע הראשון
            if (num <= mat[(n / 2) - 1 + i][j]) {
                // נשארים באותו רבע
                i = i;
                j = j;
            } 
            // בדיקה האם המספר נמצא ברבע השני
            else if (num <= mat[(n / 2) - 1 + i][(n / 2) + j]) {
                // מעבירים את העמודה לרבע השני
                j += n / 2;
            } 
            // בדיקה האם המספר נמצא ברבע השלישי
            else if (num <= mat[(n - 1) + i][(n / 2) + j]) {
                // מעבירים את השורה והעמודה לרבע השלישי
                i += n / 2;
                j += n / 2;
            } 
            // בדיקה האם המספר נמצא ברבע הרביעי
            else if (num <= mat[(n - 1) + i][j]) {
                // מעבירים את השורה לרבע הרביעי
                i += n / 2;
            }
            
            // בדיקה אם המספר נמצא במיקום הנוכחי
            if (mat[i][j] == num) {
                // מדפיסים את המיקום
                System.out.println("row = " + i);
                System.out.println("col = " + j);
                return true;
            } 
            // אם לא, מחלקים את n בחצי להמשך החיפוש ברבעים
            else {
                n = n / 2;
            }
        }
        // אם לא נמצא המספר, מחזירים false
        return false;
    }
    

}
